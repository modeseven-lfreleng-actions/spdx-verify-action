# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

[tox]
min_version = 4.0
envlist = py39, py310, py311, py312, test
skip_missing_interpreters = true

[testenv]
# Install the package in editable mode with dependencies
deps =
    pytest>=7.0
    pytest-cov>=4.0
    coverage[toml]>=7.0

# Install the project in editable mode to ensure spdx_verify module is available
package = editable

# Set environment variables for consistent test execution
setenv =
    # Ensure coverage data file is in temp location
    COVERAGE_FILE = {envtmpdir}/.coverage
    # Set Python path to include project root
    PYTHONPATH = {toxinidir}
    # Enable pytest coverage integration
    COV_CORE_SOURCE = {toxinidir}
    COV_CORE_CONFIG = {toxinidir}/pyproject.toml
    COV_CORE_DATAFILE = {envtmpdir}/.coverage

commands =
    # Run pytest with coverage, using temp directory for coverage data
    pytest {posargs} \
        --cov=spdx_verify \
        --cov-report=term-missing \
        --cov-report=html:{envtmpdir}/htmlcov \
        --cov-config=pyproject.toml \
        --strict-markers \
        --strict-config \
        -v \
        tests/

[testenv:py39]
description = Run all checks for Python 3.9 (for compatibility testing)
deps =
    {[testenv]deps}
commands =
    pytest --cov=spdx_verify --cov-report=term-missing --cov-report=xml:{envtmpdir}/coverage.xml --cov-config=pyproject.toml tests/

[testenv:py310]
description = Run all checks for Python 3.10
deps =
    {[testenv]deps}
commands =
    pytest --cov=spdx_verify --cov-report=term-missing --cov-report=xml:{envtmpdir}/coverage.xml --cov-config=pyproject.toml tests/

[testenv:py311]
description = Run all checks for Python 3.11
deps =
    {[testenv]deps}
commands =
    pytest --cov=spdx_verify --cov-report=term-missing --cov-report=xml:{envtmpdir}/coverage.xml --cov-config=pyproject.toml tests/

[testenv:py312]
description = Run all checks for Python 3.12 (latest supported)
deps =
    {[testenv]deps}
commands =
    pytest --cov=spdx_verify --cov-report=term-missing --cov-report=xml:{envtmpdir}/coverage.xml --cov-config=pyproject.toml tests/

[testenv:test-e2e]
description = Run end-to-end tests specifically
setenv =
    {[testenv]setenv}
    # These tests run subprocess calls to spdx_verify.py
    PYTHONPATH = {toxinidir}
commands =
    pytest -v tests/test_e2e.py tests/test_pypackages_fix.py

[testenv:test-quick]
description = Run quick unit tests (excluding slow e2e tests)
commands =
    pytest -v tests/ -m "not slow and not e2e" --cov=spdx_verify --cov-report=term-missing --cov-report=xml:{envtmpdir}/coverage.xml

[testenv:github-actions]
description = Environment that mimics GitHub Actions testing
setenv =
    {[testenv]setenv}
    GITHUB_ACTIONS = true
commands =
    pytest --cov=spdx_verify --cov-report=term-missing --cov-report=xml:{envtmpdir}/coverage.xml --cov-config=pyproject.toml tests/

[testenv:docs]
description = Build documentation (if applicable)
deps =
    sphinx
    sphinx-rtd-theme
changedir = docs
commands =
    sphinx-build -b html . _build/html

# Configuration for pytest within tox
[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts =
    --strict-markers
    --strict-config
    -ra
    --tb=short
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    e2e: marks tests as end-to-end tests
    integration: marks tests as integration tests
    unit: marks tests as unit tests

# GitHub Actions compatibility
[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
