---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# Runs on a new pull request, performs build and runs tests
name: 'Python Build/Test'

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, edited, synchronize]
    branches:
      - main
      - master
    paths:
      - '**'
      - '!.github/**'
      - '!.*'
      - '!tox.ini'

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

permissions: {}

jobs:
  python-build:
    name: 'Python Build'
    runs-on: 'ubuntu-24.04'
    outputs:
      matrix_json: "${{ steps.python-build.outputs.matrix_json }}"
      artefact_name: "${{ steps.python-build.outputs.artefact_name }}"
      artefact_path: "${{ steps.python-build.outputs.artefact_path }}"
    permissions:
      contents: write
    timeout-minutes: 12
    env:
      GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
      # Harden the runner used by this workflow
      - uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: 'audit'

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 'Build Python project'
        id: python-build
        # yamllint disable-line rule:line-length
        uses: lfreleng-actions/python-build-action@a9d0ef8a2324ac76e798ad6dc306f08b83b5b213 # v0.1.11

  python-tests:
    name: 'Python Tests'
    runs-on: 'ubuntu-24.04'
    needs: 'python-build'
    # Matrix job
    strategy:
      fail-fast: false
      matrix: "${{ fromJson(needs.python-build.outputs.matrix_json) }}"
    permissions:
      contents: read
    timeout-minutes: 12
    steps:
      # Harden the runner used by this workflow
      - uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 'Test Python project [PYTEST]'
        # yamllint disable-line rule:line-length
        uses: modeseven-lfreleng-actions/python-test-action@update-action # Testing
        # yamllint disable-line rule:line-length
        # uses: lfreleng-actions/python-test-action@16adb21ca4866bebc75e7b35203ce5b376b01430 # v0.1.7
        with:
          python_version: "${{ matrix.python-version }}"

      - name: 'Debug: Post-Test Information'
        if: always() # Run even if tests fail
        run: |
          echo "=== POST-TEST DEBUG INFORMATION ==="
          echo "Working directory: $(pwd)"
          echo "Test exit code: $?"
          echo ""
          echo "=== PYTEST CACHE AND LOGS ==="
          if [ -d ".pytest_cache" ]; then
            echo ".pytest_cache contents:"
            find .pytest_cache -type f | head -10
          fi
          echo ""
          echo "=== COVERAGE FILES ==="
          if [ -f ".coverage" ]; then
            echo ".coverage file exists"
          fi
          if [ -f "htmlcov/index.html" ]; then
            echo "HTML coverage report exists"
          fi
          echo ""
          echo "=== MANUAL TEST RUN ==="
          echo "Attempting to run tests manually:"
          python3 -m pip list | grep -E "(pytest|coverage)"
          echo "Python path:"
          python3 -c "import sys; print('\n'.join(sys.path))"
          echo "Current working directory contents:"
          ls -la
          echo "Attempting single test run:"
          python3 -m pytest \
            tests/test_config.py::TestConfigurationValidation::test_config_file_exists \
            -v || echo "Manual test failed"

  python-audit:
    name: 'Python Audit'
    runs-on: 'ubuntu-24.04'
    needs: 'python-build'
    # Matrix job
    strategy:
      fail-fast: false
      matrix: "${{ fromJson(needs.python-build.outputs.matrix_json) }}"
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      # Harden the runner used by this workflow
      - uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: 'audit'

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Audit dependencies ${{ matrix.python-version }}"
        # yamllint disable-line rule:line-length
        uses: lfreleng-actions/python-audit-action@0637cc9f40984b46bec578631fbac2a354eebabd # v0.1.5
        with:
          python_version: "${{ matrix.python-version }}"
